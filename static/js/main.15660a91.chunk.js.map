{"version":3,"sources":["logo.svg","components/menu/menu.component.jsx","components/menu-item/menu-item.component.jsx","pages/header/Header.jsx","components/my-button/MyButton.component.jsx","components/form-input/FormInput.component.jsx","components/select/Select.component.jsx","components/date-and-time-select/dateAndTime.component.jsx","pages/ading/AddingCard.jsx","components/custom-button/CustomButton.component.jsx","components/sing-in/SignIn.component.jsx","components/table/Table.component.jsx","pages/Management-table/ManagementTable.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","props","className","to","item","url","title","MenuItem","list","map","key","id","List","Header","useStyles","makeStyles","theme","root","margin","spacing","MyButton","classes","Button","onClick","sendProperty","variant","color","href","text","FormInput","handleChange","label","otherProps","onChange","value","MySelect","items","selected","disabled","hidden","DateAndTime","timeHandleChange","dateHandleChange","type","AddingCard","useState","radarNumber","setRadarNumber","React","localStorage","getItem","description","setDescription","date","setDate","time","setTime","ReportersName","setReportersName","useEffect","setItem","e","target","event","name","addEvent","CustomButton","children","handleClick","Component","Table","class","emp","userName","ManagementTable","isLogedIn","chanegToTrue","correctEmail","cerrectPassword","App","setList","alert","setIsLogIn","setCorrectEmail","handleCorrect","email","password","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2IAAAA,EAAOC,QAAU,IAA0B,kC,gXCM5B,SAASC,EAAKC,GAC1B,OACA,yBAAKC,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAIF,EAAMG,KAAKC,KACpB,8BAAM,gCAASJ,EAAMG,KAAKE,UCJnB,SAASC,EAASN,GAC7B,OACI,yBAAKC,UAAU,aACVD,EAAMO,KAAKC,KAAI,SAAAL,GAAI,OAChB,kBAAC,EAAD,CAAMM,IAAKN,EAAKO,GAAIP,KAAMA,QCH1C,IAAMQ,EAAO,CACT,CAACN,MAAM,mBAAoBK,GAAG,EAAGN,IAAI,mBACrC,CAACC,MAAM,OAAQK,GAAG,EAAGN,IAAI,KACzB,CAACC,MAAM,kBAAmBK,GAAG,EAAGN,IAAI,eAKzB,SAASQ,IAGpB,OACI,6BACI,kBAACN,EAAD,CAAUC,KAAMI,K,oBChBtBE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,SAKb,SAASC,EAASnB,GAC/B,IAAMoB,EAAUP,IAEhB,OACG,yBAAKZ,UAAWmB,EAAQJ,MACd,kBAACK,EAAA,EAAD,CAAQC,QAAStB,EAAMuB,aACtBC,QAAQ,YAAYC,MAAM,UAAUC,KAAK,sBACtC1B,EAAM2B,O,kBCfV,SAASC,EAAT,GAA0D,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,MAASC,EAAa,wCACpE,OACI,yBAAK9B,UAAU,SACX,yCACAA,UAAU,aACV+B,SAAUH,GACNE,IAEAD,EACC,2BACF7B,UAAS,UACL8B,EAAWE,MAAQ,SAAW,GADzB,sBAGFH,GAEJ,M,MCZH,SAASI,EAASlC,GAE/B,IAAMK,EAAQL,EAAMK,MACd8B,EAAQnC,EAAMW,KAEpB,OACE,yBAAKV,UAAU,SACb,4BAAQA,UAAU,cAAcS,GAAG,KAAKsB,SAAUhC,EAAM6B,cAC5D,4BAAQ5B,UAAU,oBAAoBmC,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAEjC,GACvD8B,EAAM3B,KAAI,SAAAL,GACT,OACA,gCAAUA,Q,YCTP,SAASoC,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,iBAAiBC,EAAmB,EAAnBA,iBAElD,OACI,yBAAKxC,UAAU,SACX,2BAAOA,UAAU,YAAYyC,KAAK,OAAOV,SAAUS,IACnD,2BAAOxC,UAAU,YAAYyC,KAAK,OAAOV,SAAUQ,K,MCAhD,SAASG,EAAW3C,GAAQ,IAAD,EAEF4C,qBAFE,mBAEjCC,EAFiC,KAEpBC,EAFoB,OAGFC,IAAMH,SAC1CI,aAAaC,QAAQ,gBAAkB,IAJD,mBAGjCC,EAHiC,KAGpBC,EAHoB,OAMhBP,mBAAS,IANO,mBAMjCQ,EANiC,KAM3BC,EAN2B,OAOhBT,mBAAS,IAPO,mBAOjCU,EAPiC,KAO3BC,EAP2B,OAQEX,mBAAS,IARX,mBAQjCY,EARiC,KAQlBC,EARkB,KAyBxCV,IAAMW,WAAU,WACdV,aAAaW,QAAQ,cAAeT,KACpC,CAACA,IA8BH,OACE,yBAAKjD,UAAU,OACb,6BACE,kBAACiC,EAAD,CACEL,aAtBiB,SAAA+B,GACvBH,EAAiBG,EAAEC,OAAO5B,QAsBpBtB,KAjDe,CACrB,QACA,2BACA,qBACA,qBACA,2BACA,2BACA,2BACA,sBA0CMN,MAAO,gDAET,kBAAC6B,EAAD,CACEL,aArCa,SAACiC,GAGpBhB,EAAegB,EAAMD,OAAO5B,QAmCtBtB,KAxDO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAyD/EN,MAAO,yBAIX,kBAACkC,EAAD,CACEE,iBA9BmB,SAAAmB,GACvBP,EAAQO,EAAEC,OAAO5B,QA8BbO,iBA3BmB,SAAAoB,GACvBL,EAAQK,EAAEC,OAAO5B,UA8Bf,kBAACL,EAAD,CACEmC,KAAK,cACLrB,KAAK,WACLT,MAAOiB,EACPrB,aA/CkB,SAACiC,GACvBX,EAAeW,EAAMD,OAAO5B,QA+CxBH,MAAO,gBAgBT,kBAACX,EAAD,CACEQ,KAAM,MACNkB,YAAaA,EACbK,YAAaA,EACb3B,aApDe,WACnBvB,EAAMgE,SAASd,EAAaL,EAAaO,EAAMI,EAAeF,MAqD5D,6BACE,kBAAC,IAAD,CAAMpD,GAAG,KACP,kBAACiB,EAAD,CAAUQ,KAAM,Y,oCC/GXsC,G,YANM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAASC,EAAX,EAAWA,YAAX,OACjB,4BAAQlE,UAAU,gBAAgBqB,QAAS6C,GACtCD,KCE2BE,Y,MCFrB,SAASC,EAAMrE,GAE1B,OACI,6BACI,uCACA,2BAAOsE,MAAM,SACT,+BACI,4BACI,oCACA,oCACA,+CACA,2CACA,0CAGR,+BACKtE,EAAMW,KAAKH,KAAI,SAAA+D,GACZ,OACI,wBAAI9D,IAAK8D,EAAI7D,IACT,4BAAK6D,EAAInB,MACT,4BAAKmB,EAAIjB,MACT,4BAAKiB,EAAIC,UACT,4BAAKD,EAAIrB,aACT,4BAAKqB,EAAI1B,oB,MCnB1B,SAAS4B,EAAT,GACsC,EADZC,UACY,EADDP,YACC,EAAjDQ,aAAiD,EAApCC,aAAoC,EAAvBC,gBAAwB,IAARlE,EAAO,EAAPA,KA2B1C,OAEI,6BACI,gDACA,kBAAC0D,EAAD,CAAO1D,KAAMA,K,YC6DEmE,MA5F3B,WAAgB,IAAD,EAEalC,mBAAS,CAAC,CAC9BlC,GAAI,EACJ0C,KAAM,WACNE,KAAM,QACNkB,SAAU,QACVtB,YAAa,YACbL,YAAa,QARN,mBAEJtC,EAFI,KAEEwE,EAFF,KAWLf,EAAW,SAACd,EAAaL,EAAaW,EAAeJ,EAAME,GACzC,KAAhBJ,EAIgB,KAAhBL,GAIkB,KAAlBW,GACAwB,MAAM,8BAEG,KAAT5B,GAAwB,KAATE,GACf0B,MAAM,4BAGVD,EAAQ,GAAD,mBAAKxE,GAAL,CAAW,CACdG,GAAI,EACJ0C,KAAMA,EACNE,KAAMA,EACNkB,SAAUhB,EACVN,YAAaA,EACbL,YAAaA,MAEjBmC,MAAM,mEAlBFA,MAAM,2BAJNA,MAAM,gBAbH,EAwCqBpC,oBAAS,GAxC9B,mBAwCJ8B,EAxCI,KAwCOO,EAxCP,KA0CLN,EAAe,WACjBM,GAAW,IA3CJ,EA8C6BrC,mBAAS,IA9CtC,mBA8CJgC,EA9CI,KA8CUM,EA9CV,OA+CmCtC,mBAAS,IA/C5C,mBA+CJiC,EA/CI,KAiDLM,GAjDK,KAiDW,SAACC,EAAOC,GACZ,KAAVD,IAA0B,IAAVA,IAAkD,IAAbC,GAAqC,KAAbA,GAC7EH,EAAgB,sBAChBF,MAAM,uCACW,yBAAVI,GAAiD,SAAbC,GAC3CJ,GAAW,KAMnB,OAAS,yBACGhF,UAAY,OAChB,kBACAW,EADA,MAEA,kBACA,IADA,KAEA,kBACA,IADA,CACM0E,OAAK,EAACC,KAAO,cACnBC,UACI,WACI,OAAO,kBAAC7C,EAAD,CAAYqB,SAAaA,OAEhC,kBACA,IADA,CACMsB,OAAK,EAACC,KAAO,mBACnBC,UACI,WACI,OAAO,kBAACf,EAAD,CACPN,YAAgBgB,EAChBR,aAAiBA,EACjBD,UAAcA,EACdE,aAAiBA,EACjBC,gBAAoBA,EACpBlE,KAASJ,OAlBzB,KAJC,MC3DOkF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.15660a91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './manu.styles.scss';\r\n\r\nexport default function Menu(props) {\r\n   return (\r\n   <div className='item'>\r\n       <Link to={props.item.url}>\r\n        <span><strong>{props.item.title}</strong></span>\r\n        </Link>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './menu-item.styles.scss';\r\n\r\nimport Item from '../menu/menu.component';\r\n\r\nexport default function MenuItem(props) {\r\n    return (\r\n        <div className='menu-item'>\r\n            {props.list.map(item => (\r\n                <Item key={item.id} item={item}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport MenuItem from '../../components/menu-item/menu-item.component'\r\n\r\n\r\n\r\n\r\nconst List = [\r\n    {title:'MANAGEMENT TABLE', id:1, url:'ManagementTable'},\r\n    {title:'HOME', id:2, url:'/'},\r\n    {title:'EVENTS SCHEDULE', id:3, url:'addingcard'},\r\n]\r\n\r\n\r\n\r\nexport default function Header() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MenuItem list={List}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MyButton(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n     <div className={classes.root}>\r\n               <Button onClick={props.sendProperty}\r\n                variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n                  {props.text}\r\n             </Button>\r\n     </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport './formInput.styles.scss'\r\n\r\nexport default function FormInput({ handleChange, label,...otherProps}) {\r\n    return (\r\n        <div className='group'>\r\n            <input \r\n            className='form-input' \r\n            onChange={handleChange}\r\n            {...otherProps}/>\r\n            {\r\n                label ? \r\n               ( <label \r\n               className={`${\r\n                   otherProps.value ? 'shrink' : ''\r\n                   } form-input-label`}>\r\n                     {label}\r\n                </label>)\r\n                : null\r\n            }\r\n        </div> \r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport './select.styles.scss'\r\n\r\n\r\n\r\nexport default function MySelect(props) {\r\n\r\n  const title = props.title\r\n  const items = props.List\r\n\r\n  return (\r\n    <div className='group'>\r\n      <select className='form-select' id=\"to\" onChange={props.handleChange}>\r\n  <option className='form-select-label' selected disabled hidden>{title}</option>\r\n          {items.map(item =>{\r\n            return(\r\n            <option >{item}</option>\r\n            )\r\n          })}\r\n        </select>\r\n    </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport './dateAndTime.styles.scss'\r\n\r\nexport default function DateAndTime({timeHandleChange,dateHandleChange}) {\r\n\r\n    return (\r\n        <div className='group'>\r\n            <input className='form-date' type=\"date\" onChange={dateHandleChange}/>\r\n            <input className='form-date' type=\"time\" onChange={timeHandleChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport MyButton from '../../components/my-button/MyButton.component'\r\n\r\nimport FormInput from '../../components/form-input/FormInput.component';\r\n\r\nimport MySelect from '../../components/select/Select.component';\r\n\r\nimport DateAndTime from '../../components/date-and-time-select/dateAndTime.component';\r\n\r\nimport './adding.styels.scss'\r\n\r\n\r\n\r\nexport default function AddingCard(props) {\r\n\r\n  const [radarNumber, setRadarNumber] = useState();\r\n  const [description, setDescription] = React.useState(\r\n    localStorage.getItem('description') || ''\r\n  );\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [ReportersName, setReportersName] = useState('');\r\n\r\n\r\n  const Radars = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14, 15, 16, 17, 18, 19, 20]\r\n\r\n  const SecurityGuards = [\r\n    'Olive',\r\n    'אורה',\r\n    'הלל',\r\n    'משה',\r\n    'תמיר',\r\n    'עומר',\r\n    'בתאל',\r\n    'דוד'\r\n  ]\r\n\r\n\r\n  React.useEffect(()=>{\r\n    localStorage.setItem('description', description);\r\n  },[description])\r\n\r\n  const handleChange = (event) => {\r\n    // localStorage.setItem('myValueInLocalStorage', event.target.value);\r\n\r\n    setRadarNumber(event.target.value);\r\n  };\r\n\r\n  const disHandleChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const nameHandleCgange = e => {\r\n    setReportersName(e.target.value)\r\n  }\r\n\r\n  const dateHandleChange = e => {\r\n    setDate(e.target.value)\r\n  }\r\n\r\n  const timeHandleChange = e => {\r\n    setTime(e.target.value)\r\n  }\r\n\r\n  const sendProperty = () => {\r\n    props.addEvent(description, radarNumber, date, ReportersName, time)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='add'>\r\n      <div>\r\n        <MySelect\r\n          handleChange={nameHandleCgange}\r\n          List={SecurityGuards}\r\n          title={'מי מדווח'}\r\n        />\r\n        <MySelect\r\n          handleChange={handleChange}\r\n          List={Radars}\r\n          title={'Choose Radar Number'}\r\n        />\r\n      </div>\r\n\r\n      <DateAndTime\r\n        dateHandleChange={dateHandleChange}\r\n        timeHandleChange={timeHandleChange}\r\n      />\r\n\r\n\r\n      <FormInput\r\n        name='description'\r\n        type='textarea'\r\n        value={description}\r\n        handleChange={disHandleChange}\r\n        label={'description'}\r\n      />\r\n\r\n\r\n\r\n\r\n\r\n      {/* <DatePicker\r\n        selected={startDate}\r\n        onChange={props.dateCgange}\r\n        showTimeSelect\r\n        timeFormat=\"HH:mm\"\r\n        timeIntervals={15}\r\n        timeCaption=\"time\"\r\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n      /> */}\r\n      <MyButton\r\n        text={'ADD'}\r\n        radarNumber={radarNumber}\r\n        description={description}\r\n        sendProperty={sendProperty}\r\n      />\r\n      <div>\r\n        <Link to='/'>\r\n          <MyButton text={'HOME'} />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport './customButton.styles.scss';\r\n\r\nconst CustomButton = ({children,handleClick}) => (\r\n    <button className='custom-button' onClick={handleClick} >\r\n        {children}\r\n    </button>\r\n)\r\n\r\nexport default CustomButton;\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport './singIn.styles.scss'\r\n\r\nimport FormInput from '../form-input/FormInput.component';\r\n\r\nimport CustomButton from '../custom-button/CustomButton.component';\r\n\r\nexport default class SignIn extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      email: '',\r\n      passowrd: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (email,passowrd) => {\r\n    this.setState({email: email, password:passowrd})\r\n  }\r\n\r\n  conect = (email, password) => {\r\n    this.props.handleClick(email, password)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className='sign-in'>\r\n        <h2>i already have an account</h2>\r\n        <span>sign in with your email and password</span>\r\n\r\n        <form >\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            value={this.state.email}\r\n            handleChange={this.handleChange}\r\n            label={'email'}\r\n            required\r\n          />\r\n          <div className={this.props.correctEmail}>Sorry, this user does not exist</div>\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n            label={'password'}\r\n            required\r\n          />\r\n          <div className={this.props.cerrectPassword}>Sorry, this user does not exist </div>\r\n\r\n          <div className='button'>\r\n            <CustomButton type=\"submit\" handleClick={this.conect}\r\n            > SIGN IN</CustomButton>\r\n            {/* <CustomButton onClick={signInWithGoogle} isGoogleSignIn > {' '} SIGN IN WITH GOOGLE {' '}</CustomButton> */}\r\n\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport './Table.styles.scss';\r\n\r\n\r\n\r\nexport default function Table(props) {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Manager</h1>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>DATE</th>\r\n                        <th>TIME</th>\r\n                        <th>REPORTER'S NAME</th>\r\n                        <th>DESCRIPTION</th>\r\n                        <th>LOCATION</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.List.map(emp => {\r\n                        return (\r\n                            <tr key={emp.id}>\r\n                                <td>{emp.date}</td>\r\n                                <td>{emp.time}</td>\r\n                                <td>{emp.userName}</td>\r\n                                <td>{emp.description}</td>\r\n                                <td>{emp.radarNumber}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport SignIn from '../../components/sing-in/SignIn.component'\r\n\r\nimport Table from '../../components/table/Table.component'\r\n\r\n\r\nimport './ManagementTable.styles.scss'\r\n\r\n\r\nexport default function ManagementTable({isLogedIn, handleClick,\r\n    chanegToTrue,correctEmail,cerrectPassword,List}) {\r\n\r\n\r\n\r\n//    const render = () => {\r\n//         if (isLogedIn === false) {\r\n//             return (\r\n//                 <div>\r\n//                     <h1>ManagementTable</h1>\r\n//                     <SignIn \r\n//                     handleClick={handleClick}\r\n//                     correctEmail={correctEmail}\r\n//                     cerrectPassword={cerrectPassword}/>\r\n//                 </div>\r\n//             )\r\n//         }\r\n//         else{\r\n//             return(\r\n//                 <div>\r\n//                     <h2>LOG IN</h2>\r\n//                     <button onClick={chanegToTrue}>click</button>\r\n//                 </div>\r\n//             )\r\n//         }\r\n//     }\r\n \r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Management Table</h1>\r\n            <Table List={List}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './pages/header/Header'\nimport AddingCard from './pages/ading/AddingCard'\nimport ManagementTable from './pages/Management-table/ManagementTable.component'\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\n\nfunction App() {\n\n    const [list, setList] = useState([{\n        id: 1,\n        date: '3-1-1991',\n        time: '13:23',\n        userName: 'david',\n        description: 'blablabla',\n        radarNumber: '14'\n    }])\n\n    const addEvent = (description, radarNumber, ReportersName, date, time) => {\n        if (description === '') {\n            alert('description')\n            return\n        }\n        if (radarNumber === '') {\n            alert('pls choose radar number')\n            return\n        }\n        if (ReportersName === '') {\n            alert(`pls choose reporter's name`)\n        }\n        if (date === '' || time === '') {\n            alert(`pls choose date and time`)\n        }\n\n        setList([...list, {\n            id: 2,\n            date: date,\n            time: time,\n            userName: ReportersName,\n            description: description,\n            radarNumber: radarNumber\n        }])\n        alert('הדיווח נקלט ')\n    }\n\n\n\n    const [isLogedIn, setIsLogIn] = useState(false);\n\n    const chanegToTrue = () => {\n        setIsLogIn(false)\n    }\n\n    const [correctEmail, setCorrectEmail] = useState('')\n    const [cerrectPassword, setCorrectPassword] = useState('')\n\n    const handleCorrect = (email, password) => {\n        if (email === '' || email === !'davidabu91@gmail.com' || password === !'0000' || password === '') {\n            setCorrectEmail('dis-cerrect-answer')\n            alert('The password or email is incorrect')\n        } else if (email === 'davidabu91@gmail.com' && password === '0000') {\n            setIsLogIn(true)\n        }\n    }\n\n\n\n    return ( <\n            div className = \"App\" >\n            <\n            Header / >\n            <\n            Switch >\n            <\n            Route exact path = \"/addingcard\"\n            component = {\n                () => {\n                    return <AddingCard addEvent = { addEvent }\n                    /> }} / >\n                    <\n                    Route exact path = '/ManagementTable'\n                    component = {\n                        () => {\n                            return <ManagementTable\n                            handleClick = { handleCorrect }\n                            chanegToTrue = { chanegToTrue }\n                            isLogedIn = { isLogedIn }\n                            correctEmail = { correctEmail }\n                            cerrectPassword = { cerrectPassword }\n                            List = { list }\n                            />\n                        }\n                    }\n                    /> < /\n                    Switch > <\n                        /div>\n                );\n            }\n\n            export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}